#ifndef H6252715178
#define H6252715178

#include <map>
#include <string>
#include <vector>

// windows.h must be before other windows headers
#include <windows.h>

#include <winuser.h>

// clang-format off
// WARN be careful that your editor does not corrupt unicode characters!

const std::multimap<int, std::string> modifier_keycode_to_str = {
    {  MOD_CONTROL,                      "^"},
    // NOT a caret!
    {  MOD_CONTROL,                      "⌃"},
    {  MOD_CONTROL,                   "ctrl"},
    {  MOD_CONTROL,                "control"},
    // alt on windows and linux, alt on mac
    {      MOD_ALT,                      "⎇"},
    // alt (?) on windows and linux, option on mac
    {      MOD_ALT,                      "⌥"},
    {      MOD_ALT,                    "alt"},
    {    MOD_SHIFT,                      "⇧"},
    {    MOD_SHIFT,                  "shift"},
    {      MOD_WIN,                      "⊞"}, // windows key symbol
    {      MOD_WIN,                      "⌘"}, // mac key symbol
    {      MOD_WIN,                   "meta"},
    {      MOD_WIN,                   "logo"},
    {      MOD_WIN,                    "win"},
    {      MOD_WIN,                "windows"},
    {      MOD_WIN,                    "mac"},
    {      MOD_WIN,                  "macos"},
    {      MOD_WIN,                    "osx"},
    {      MOD_WIN,                  "apple"},
};

const std::multimap<int, std::string> keycode_to_str = {
    {    VK_RETURN,                      "⌤"},
    {    VK_RETURN,                      "↩"},
    {    VK_RETURN,                      "⏎"},
    {    VK_RETURN,                  "enter"},
    {    VK_RETURN,                 "return"},
    {     VK_SHIFT,                      "⇧"},
    {     VK_SHIFT,                  "shift"},
    {      VK_BACK,                      "⌫"},
    {      VK_BACK,                     "bs"},
    {      VK_BACK,                   "back"},
    {      VK_BACK,                 "bspace"},
    {      VK_BACK,              "backspace"},
    {      VK_BACK,             "back-space"},
    {    VK_DELETE,                      "⌦"},
    {    VK_DELETE,                    "del"},
    {    VK_DELETE,                 "delete"},
    {    VK_DELETE,              "fwddelete"},
    {    VK_DELETE,             "fwd-delete"},
    {    VK_DELETE,          "forwarddelete"},
    {    VK_DELETE,         "forward-delete"},
    {     VK_PAUSE,                  "break"},
    {     VK_PAUSE,                  "pause"},
    {     VK_PAUSE,             "breakpause"},
    {     VK_PAUSE,             "pausebreak"},
    {     VK_PAUSE,            "break-pause"},
    {     VK_PAUSE,            "pause-break"},
    {   VK_CONTROL,                      "^"},
    // NOT a caret!
    {   VK_CONTROL,                      "⌃"},
    {   VK_CONTROL,                   "ctrl"},
    {   VK_CONTROL,                "control"},
    // alt on windows and linux, alt on mac
    {      VK_MENU,                      "⎇"},
    // alt (?) on windows and linux, option on mac
    {      VK_MENU,                      "⌥"},
    {      VK_MENU,                    "alt"},
    // also: tab left ⇤
    {       VK_TAB,                      "⇥"},
    {       VK_TAB,                    "tab"},
    {   VK_CAPITAL,                      "⇪"},
    {   VK_CAPITAL,                    "cap"},
    {   VK_CAPITAL,                "capital"},
    {   VK_CAPITAL,               "capitals"},
    {   VK_CAPITAL,                   "caps"},
    {   VK_CAPITAL,                "caplock"},
    {   VK_CAPITAL,               "capslock"},
    {   VK_CAPITAL,               "cap-lock"},
    {   VK_CAPITAL,              "caps-lock"},
    {    VK_ESCAPE,                      "⎋"},
    {    VK_ESCAPE,                    "esc"},
    {    VK_ESCAPE,                 "escape"},
    {     VK_SPACE,                      "␣"},
    {     VK_SPACE,                  "space"},
    {     VK_SPACE,               "spacebar"},
    {     VK_SPACE,              "space-bar"},
    {     VK_PRIOR,                      "⇞"},
    {     VK_PRIOR,                   "pgup"},
    {     VK_PRIOR,                  "pg-up"},
    {     VK_PRIOR,                 "pageup"},
    {     VK_PRIOR,                "page-up"},
    {      VK_NEXT,                      "⇟"},
    {      VK_NEXT,                   "pgdn"},
    {      VK_NEXT,                  "pg-dn"},
    {      VK_NEXT,                 "pgdown"},
    {      VK_NEXT,                "pg-down"},
    {      VK_NEXT,                 "pagedn"},
    {      VK_NEXT,                "page-dn"},
    {      VK_NEXT,               "pagedown"},
    {      VK_NEXT,              "page-down"},
    {      VK_HOME,                      "↖"},
    {      VK_HOME,                   "home"},
    {       VK_END,                      "↘"},
    {       VK_END,                    "end"},
    {      VK_LEFT,                      "←"},
    {      VK_LEFT,                   "left"},
    {      VK_LEFT,             "left-arrow"},
    {      VK_LEFT,         "left-direction"},
    {      VK_LEFT,   "left-direction-arrow"},
    {     VK_RIGHT,                      "→"},
    {     VK_RIGHT,                  "right"},
    {     VK_RIGHT,            "right-arrow"},
    {     VK_RIGHT,        "right-direction"},
    {     VK_RIGHT,  "right-direction-arrow"},
    {        VK_UP,                      "↑"},
    {        VK_UP,                     "up"},
    {        VK_UP,               "up-arrow"},
    {        VK_UP,           "up-direction"},
    {        VK_UP,     "up-direction-arrow"},
    {      VK_DOWN,                      "↓"},
    {      VK_DOWN,                   "down"},
    {      VK_DOWN,             "down-arrow"},
    {      VK_DOWN,         "down-direction"},
    {      VK_DOWN,   "down-direction-arrow"},
    { VK_OEM_MINUS,                  "minus"},
    { VK_OEM_MINUS,               "subtract"},
    { VK_OEM_MINUS,                 "hyphen"},
    { VK_OEM_MINUS,                   "dash"},
    { VK_OEM_MINUS,                 "endash"},
    { VK_OEM_MINUS,                "en-dash"},
    { VK_OEM_COMMA,                  "comma"},
    {VK_OEM_PERIOD,                 "period"},
    {VK_OEM_PERIOD,                    "dot"},
    {     VK_OEM_2,                  "slash"},
    {     VK_OEM_2,           "forwardslash"},
    {     VK_OEM_2,          "forward-slash"},
    {     VK_OEM_1,              "semicolon"},
    {     VK_OEM_1,             "semi-colon"},
    {  VK_OEM_PLUS,                  "equal"},
    {  VK_OEM_PLUS,                 "equals"},
    {     VK_OEM_5,                 "bslash"},
    {     VK_OEM_5,              "backslash"},
    {     VK_OEM_5,             "back-slash"},
    {     VK_OEM_4,               "lbracket"},
    {     VK_OEM_4,            "leftbracket"},
    {     VK_OEM_4,           "left-bracket"},
    {     VK_OEM_6,               "rbracket"},
    {     VK_OEM_6,           "rightbracket"},
    {     VK_OEM_6,          "right-bracket"},
    {     VK_CLEAR,                      "⌧"},
    {     VK_CLEAR,                  "clear"},
    {   VK_NUMPAD0,                   "num0"},
    {   VK_NUMPAD1,                   "num1"},
    {   VK_NUMPAD2,                   "num2"},
    {   VK_NUMPAD3,                   "num3"},
    {   VK_NUMPAD4,                   "num4"},
    {   VK_NUMPAD5,                   "num5"},
    {   VK_NUMPAD6,                   "num6"},
    {   VK_NUMPAD7,                   "num7"},
    {   VK_NUMPAD8,                   "num8"},
    {   VK_NUMPAD9,                   "num9"},
    {   VK_NUMLOCK,                      "⇭"},
    {   VK_NUMLOCK,                "numlock"},
    {   VK_NUMLOCK,               "num-lock"},
    {    VK_SCROLL,             "scrolllock"},
    {    VK_SCROLL,            "scroll-lock"},
    {     VK_PRINT,                  "print"},
    {     VK_PRINT,            "printscreen"},
    {     VK_PRINT,           "print-screen"},
    {    VK_INSERT,                 "insert"},
    {    VK_INSERT,                    "ins"},
    {      VK_LWIN,                      "⊞"}, // windows key symbol
    {      VK_LWIN,                      "⌘"}, // mac key symbol
    {      VK_LWIN,                   "meta"},
    {      VK_LWIN,                   "logo"},
    {      VK_LWIN,                    "win"},
    {      VK_LWIN,                "windows"},
    {      VK_LWIN,                    "mac"},
    {      VK_LWIN,                  "macos"},
    {      VK_LWIN,                    "osx"},
    {      VK_LWIN,                  "apple"},
    {     VK_OEM_3,              "backquote"},
    {     VK_OEM_3,             "back-quote"},
    {     VK_OEM_7,                  "quote"},
    {         0x30,                      "0"},
    {         0x31,                      "1"},
    {         0x32,                      "2"},
    {         0x33,                      "3"},
    {         0x34,                      "4"},
    {         0x35,                      "5"},
    {         0x36,                      "6"},
    {         0x37,                      "7"},
    {         0x38,                      "8"},
    {         0x39,                      "9"},
    {         0x41,                      "a"},
    {         0x42,                      "b"},
    {         0x43,                      "c"},
    {         0x44,                      "d"},
    {         0x45,                      "e"},
    {         0x46,                      "f"},
    {         0x47,                      "g"},
    {         0x48,                      "h"},
    {         0x49,                      "i"},
    {         0x4a,                      "j"},
    {         0x4b,                      "k"},
    {         0x4c,                      "l"},
    {         0x4d,                      "m"},
    {         0x4e,                      "n"},
    {         0x4f,                      "o"},
    {         0x50,                      "p"},
    {         0x51,                      "q"},
    {         0x52,                      "r"},
    {         0x53,                      "s"},
    {         0x54,                      "t"},
    {         0x55,                      "u"},
    {         0x56,                      "v"},
    {         0x57,                      "w"},
    {         0x58,                      "x"},
    {         0x59,                      "y"},
    {         0x5a,                      "z"},
};
// clang-format on

#endif // H6252715178
